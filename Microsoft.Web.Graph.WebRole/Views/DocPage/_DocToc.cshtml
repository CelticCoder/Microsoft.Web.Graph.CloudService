@model DynamicDocs.Models.DocMeta

@{
    Cache["SubMenuCount"] = 0;
}

@helper DisplayMenu(TocItem[] items,string urlPrefix)
{
foreach (TocItem item in items)
{
    if (string.IsNullOrEmpty(item.text) || string.IsNullOrEmpty(item.url))
    {
        return;
    }
    string selected = "";
    string collapseSwitch = "collapse";
    if(item.url.Equals(Model.DocPath))
    {
        selected = "active";
    }
    else if(item.Children!=null&&item.Children.Contains(";"+Model.DocPath+";"))
    {
        collapseSwitch += " in";
    }

    if ((!string.IsNullOrEmpty(item.text)) && (!string.IsNullOrEmpty(item.url)))
    {
        if (item.TocItem1 != null && item.TocItem1.Length > 0)
        {
            Cache["SubMenuCount"] = (int)Cache["SubMenuCount"] + 1;
            string ulId = "item" + Cache["SubMenuCount"];
                <li aria-label="@item.text">
                    <a class="@selected" style="text-transform: uppercase; font-weight:bold; font-size 12px !important;" data-target="#@ulId">@item.text</a>
                    <ul id="@ulId" class="@collapseSwitch @selected">
                        @DisplayMenu(item.TocItem1,urlPrefix)
                    </ul>
                </li>
        }
        else
        {
            string finalUrl = urlPrefix + item.url;
                <li aria-label="@item.text">
                    <a class="@selected" href="@finalUrl">@item.text</a>
                </li>
            }
        }
    }
}

<div id="docNavMenu" style="margin: 60px 10px 5px; width: 400px; float: left; position: static;">
    @if ( @Model.CurrentDocSet!=null&& @Model.CurrentDocSet.Filter != null)
    {
        <div id="filters" style="width:100%">

            @foreach (DocSetsItemFilter filter in @Model.CurrentDocSet.Filter)
            {
                <div id="filter_@filter.Name">
                    <select>
                        <option value="Filter by @filter.Name">Filter by @filter.Name</option>
                        @{
                string[] values = filter.Value.Split(new char[] { ';' });
                foreach (string value in values)
                {
                    <option value="@value">@value</option>
                }
                        }
                    </select>
                </div>
            }
        </div>
    }

    <nav class="nav-blade">
        <ul class="home-nav-List nav-list">
            @DisplayMenu(@Model.DocToc.TocItem,Model.DocToc.UrlPrefix)
        </ul>
    </nav>
</div>